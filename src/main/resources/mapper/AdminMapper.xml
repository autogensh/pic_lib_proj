<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.piclib.web.dao.AdminMapper">
    <resultMap id="recordCount" type="java.lang.Integer">
        <result column="recordCount" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap id="materialListResultMap" type="java.util.HashMap">
<!--        <result column="owner" jdbcType="VARCHAR"/>-->
<!--        <result column="categoryName" jdbcType="VARCHAR"/>-->
<!--        <result column="licenseTitle" jdbcType="VARCHAR"/>-->
<!--        <result column="id" jdbcType="INTEGER"/>-->
<!--        <result column="catId" jdbcType="INTEGER"/>-->
<!--        <result column="licenseId" jdbcType="INTEGER"/>-->
<!--        <result column="materialName" jdbcType="VARCHAR"/>-->
<!--        <result column="desc" jdbcType="VARCHAR"/>-->
<!--        <result column="coverImg" jdbcType="VARCHAR"/>-->
<!--        <result column="measure" jdbcType="VARCHAR"/>-->
<!--        <result column="colorSpace" jdbcType="VARCHAR"/>-->
<!--        <result column="fileSize" jdbcType="VARCHAR"/>-->
<!--        <result column="fileFormat" jdbcType="VARCHAR"/>-->
<!--        <result column="views" jdbcType="INTEGER"/>-->
<!--        <result column="downs" jdbcType="INTEGER"/>-->
<!--        <result column="createAt" jdbcType="TIMESTAMP"/>-->
<!--        <result column="updateAt" jdbcType="TIMESTAMP"/>-->
<!--        <result column="createBy" jdbcType="INTEGER"/>-->
    </resultMap>
    <select id="selectMaterialList" parameterType="java.util.HashMap" resultMap="materialListResultMap, recordCount">
        select SQL_CALC_FOUND_ROWS
        u.username as owner,
        c.name as categoryName,
        l.title as licenseTitle,
        m.id as id,
        m.catId as catId,
        m.license as licenseId,
        m.name as materialName,
        m.`desc` as `desc`,
        f.fileUrl as coverImg,
        f.measure as measure,
        f.colorSpace as colorSpace,
        f.fileSize as fileSize,
        f.fileFormat as fileFormat,
        m.views as views,
        m.downs as downs,
        m.createAt as createAt,
        m.updateAt as updateAt,
        m.createBy as createBy
        from t_material m
        LEFT JOIN t_material_category c
        on m.catId = c.id
        LEFT JOIN t_user u
        on m.createBy = u.id
        LEFT JOIN t_license l
        on m.license = l.id
        LEFT JOIN (select min(id), matId, fileUrl, measure, colorSpace, fileSize, fileFormat from t_material_file where
        isDeleted=false group by matId) f
        on m.id=f.matId
        where m.isDeleted = false
        <if test="orderBy != null">
            order by ${orderBy}
        </if>
        <if test="page != null and pageSize != null">
            limit ${(page-1)*pageSize}, #{pageSize}
        </if>
        ;SELECT found_rows() as recordCount
    </select>
    <update id="deleteMaterialFiles" parameterType="java.lang.Integer">
        update t_material_file
        set isDeleted= true
        where matId = #{matId}
    </update>
    <insert id="insertMaterialFileList" parameterType="java.util.List">
        replace into t_material_file(matId, fileUrl, fileFormat, fileSize, `desc`, measure, colorSpace, isDeleted)
        values
        <foreach collection="list" item="item" index="index" separator=", " close=";">
            (#{item.matId}, #{item.fileUrl}, #{item.fileFormat}, #{item.fileSize}, #{item.desc}, #{item.measure},
            #{item.colorSpace}, #{item.isDeleted})
        </foreach>
    </insert>
</mapper>
